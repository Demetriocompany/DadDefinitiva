/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guidefinitiva;


import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author felipe
 */
public class TPV extends javax.swing.JFrame {
      static String nombre;
      static double precio;
      static int i = 0;
      static int vecespizza = 0;
      static int vecesbebida= 0;
      static int veceshamburgesa= 0;
      static int vecesensalada =0;
      static int veceostros = 0;
      static int anchura = 20;
      static int altura = 20;
      static int anchura2 = 20;
      static int altura2 = 20;
      static int anchura3 = 20;
      static int altura3 = 20;
      static int anchura4 = 20;
      static int altura4 = 20;
      static int anchura5 = 20;
      static int altura5 = 20;  
      static boolean rota = false;
      static boolean rota1 = false;
      static boolean rota2 = false;
      static boolean rota3 = false;
      static boolean rota4 = false;
      static int vectordeetiquetas = 0;
        static  JLabel []etiqueta = new JLabel[50];
    /**
     * Creates new form TPV
     */
    public TPV() {
        
        initComponents();
        this.setVisible(false);
      
        antesdeArrancar();
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Pizzas", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Hamburgesas", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ensaladas", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Bebidas", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Otros", jPanel5);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre_P", "PVP", "Ingredientes", "Alergenos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Su Pedido", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TPV().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void antesdeArrancar() {
       try{
    // DB connection
        Class.forName("com.mysql.jdbc.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://35.240.82.235/productos","root","cazador12");
        PreparedStatement ps=con.prepareStatement("select * from Inventario"); 
        ResultSet rs=ps.executeQuery(); 
         while (rs.next()){
            ObjetosComida obc = new ObjetosComida(rs.getString("nombre"),Double.parseDouble(rs.getString("precio")),rs.getString("categoria"),rs.getString("alergenos"),Integer.parseInt(rs.getString("stock")),rs.getString("Ingredientes"));
            ponerenjpanel(obc);
         }
        ps.close();
  
        con.close();
    }catch(Exception e){
        e.printStackTrace();
    }
        
        //To change body of generated methods, choose Tools | Templates.
    }

    private  void ponerenjpanel(ObjetosComida obc) {
     
        System.out.println(obc.nombre);
        String categoriademierda = obc.categoria;
       
        etiqueta[vectordeetiquetas] = new JLabel();
        switch(categoriademierda){
            case "Pizza" :   
       
        URL url;
        try {
            url = new URL("http://35.240.82.235/imagenes/Pizza"+vecespizza+".jpg");
            Image image = ImageIO.read(url);
            etiqueta[vectordeetiquetas].setIcon(new ImageIcon(image));
            etiqueta[vectordeetiquetas].addMouseListener(new MouseAdapter() {
                  @Override
                  public void mouseClicked(MouseEvent e) {
                        ComprarObjeto rg = new ComprarObjeto();
                        rg.conseguirObjeto(obc);
                      rg.setVisible(true);
                     
                         actualizadb();
                     
                  }
            });
        } catch (MalformedURLException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        }
 
          if(rota == false){
               etiqueta[vectordeetiquetas].setBounds(altura ,anchura, 260, 260);
               anchura=20;
               altura+=280;
               rota = true;
          }else if(rota == true){
               etiqueta[vectordeetiquetas].setBounds(altura, anchura, 260, 260);
               anchura+=280;
               altura=20;
               rota = false;
          }
           etiqueta[vectordeetiquetas].setVisible(true);
           jPanel1.add(etiqueta[vectordeetiquetas]);
           vecespizza++;   
           vectordeetiquetas++;
          
     
           break;
            case "Hamburgesa" :
                 URL url2;
        try {
            url2 = new URL("http://35.240.82.235/imagenes/Hamburgesa"+veceshamburgesa+".jpg");
            Image image = ImageIO.read(url2);
            etiqueta[vectordeetiquetas].setIcon(new ImageIcon(image));
            etiqueta[vectordeetiquetas].addMouseListener(new MouseAdapter() {
                  @Override
                  public void mouseClicked(MouseEvent e) {
                        ComprarObjeto rg = new ComprarObjeto();
                        rg.conseguirObjeto(obc);
                      rg.setVisible(true);
                     
                         actualizadb();
                     
                  }
            });
        } catch (MalformedURLException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        }
 
          if(rota1 == false){
               etiqueta[vectordeetiquetas].setBounds(altura2 ,anchura2, 260, 260);
               anchura2=20;
               altura2+=280;
               rota1 = true;
          }else if(rota1 == true){
               etiqueta[vectordeetiquetas].setBounds(altura2, anchura2, 260, 260);
               anchura2+=280;
               altura2=20;
               rota1 = false;
          }
           etiqueta[vectordeetiquetas].setVisible(true);
           jPanel2.add(etiqueta[vectordeetiquetas]);
           veceshamburgesa++;   
           vectordeetiquetas++;
          
           //jPanel2.add(etiqueta);
           break;
            case "Ensaladas" :
                 URL url3;
        try {
            url3 = new URL("http://35.240.82.235/imagenes/Ensalada"+vecesensalada+".jpg");
            Image image = ImageIO.read(url3);
            etiqueta[vectordeetiquetas].setIcon(new ImageIcon(image));
             etiqueta[vectordeetiquetas].addMouseListener(new MouseAdapter() {
                  @Override
                  public void mouseClicked(MouseEvent e) {
                        ComprarObjeto rg = new ComprarObjeto();
                        rg.conseguirObjeto(obc);
                      rg.setVisible(true);
                     
                         actualizadb();
                     
                  }
            });
        } catch (MalformedURLException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        }
 
          if(rota2 == false){
               etiqueta[vectordeetiquetas].setBounds(altura3 ,anchura3, 260, 260);
               anchura3=20;
               altura3+=280;
               rota2 = true;
          }else if(rota2 == true){
               etiqueta[vectordeetiquetas].setBounds(altura3, anchura3, 260, 260);
               anchura3+=280;
               altura3=20;
               rota2 = false;
          }
           etiqueta[vectordeetiquetas].setVisible(true);
           jPanel3.add(etiqueta[vectordeetiquetas]);
           vecesensalada++;   
           vectordeetiquetas++;
          
            //jPanel3.add(etiqueta); 
            break;
            case "Bebida" :
                 URL url4;
        try {
            url4 = new URL("http://35.240.82.235/imagenes/bebida"+vecesbebida+".jpg");
            Image image = ImageIO.read(url4);
            etiqueta[vectordeetiquetas].setIcon(new ImageIcon(image));
             etiqueta[vectordeetiquetas].addMouseListener(new MouseAdapter() {
                  @Override
                  public void mouseClicked(MouseEvent e) {
                        ComprarObjeto rg = new ComprarObjeto();
                        rg.conseguirObjeto(obc);
                      rg.setVisible(true);

                         actualizadb();
                     
                  }
            });
        } catch (MalformedURLException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        }
 
          if(rota3 == false){
               etiqueta[vectordeetiquetas].setBounds(altura4 ,anchura4, 260, 260);
               anchura4=20;
               altura4+=280;
               rota3 = true;
          }else if(rota3 == true){
               etiqueta[vectordeetiquetas].setBounds(altura4, anchura4, 260, 260);
               anchura4+=280;
               altura4=20;
               rota3 = false;
          }
           etiqueta[vectordeetiquetas].setVisible(true);
           jPanel4.add(etiqueta[vectordeetiquetas]);
           vecesbebida++;   
           vectordeetiquetas++;
          
            //jPanel4.add(etiqueta);
            break;
            case "Otros":
                 URL url5;
        try {
            url5 = new URL("http://35.240.82.235/imagenes/Otros"+veceostros+".jpg");
            Image image = ImageIO.read(url5);
            etiqueta[vectordeetiquetas].setIcon(new ImageIcon(image));
             etiqueta[vectordeetiquetas].addMouseListener(new MouseAdapter() {
                  @Override
                  public void mouseClicked(MouseEvent e) {
                        ComprarObjeto rg = new ComprarObjeto();
                        rg.conseguirObjeto(obc);
                      rg.setVisible(true);
                         actualizadb();
                     
                  }
            });
        } catch (MalformedURLException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TPV.class.getName()).log(Level.SEVERE, null, ex);
        }
 
          if(rota4 == false){
               etiqueta[vectordeetiquetas].setBounds(altura5 ,anchura5, 260, 260);
               anchura5=20;
               altura5+=280;
               rota4 = true;
          }else if(rota4 == true){
               etiqueta[vectordeetiquetas].setBounds(altura5, anchura5, 260, 260);
               anchura5+=280;
               altura5=20;
               rota4 = false;
          }
           etiqueta[vectordeetiquetas].setVisible(true);
           jPanel5.add(etiqueta[vectordeetiquetas]);
           veceostros++;   
           vectordeetiquetas++;
          
            //jPanel5.add(etiqueta);
        }
    }
   public void actualizadb(){
       try{
    // DB connection
        Class.forName("com.mysql.jdbc.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://35.240.82.235/productos","root","cazador12");
        PreparedStatement ps=con.prepareStatement("select * from pedido"); 
        ResultSet rs=ps.executeQuery(); 
        int pepe = jTable1.getColumnCount();
        String Nombre = null;
        double precio = 0.0 ;
        String Alergenos= null ;
        String Ingredientes= null ;
        int x = 0;
         while (rs.next()){
           Nombre =  rs.getString("nombre");
            precio = Double.parseDouble(rs.getString("dinero"));
            Alergenos = rs.getString("alergenos");
            Ingredientes = rs.getString("Ingredientes");
            jTable1.setValueAt(Nombre, x, 0);
            jTable1.setValueAt(precio, x, 1);
            jTable1.setValueAt(Alergenos, x, 2);
            jTable1.setValueAt(Ingredientes, x, 3);   
            x++;
         }
        ps.close();
  
        con.close();
    }catch(Exception e){
        e.printStackTrace();
    }
        
   }
   
}
